ssh admin@192.168.249.23
sudo su -
passwd root

nano /etc/ssh/sshd_config
#root login
systemctl restart sshd

ssh-copy-id root@192.168.249.20-28

scp cri-containerd-cni-1.5.5-linux-amd64.tar.gz root@192.168.249.20-28:/root/

scp kube.7z root@192.168.249.20-28:/root/

apt-get install p7zip
7z e kube.7z && mv kubeadm kubectl kubelet /usr/bin/ && mv kubelet.service /usr/lib/systemd/system/ && systemctl daemon-reload && systemctl enable --now kubelet && systemctl status kubelet

# Change Machine ID
rm -f /etc/machine-id /var/lib/dbus/machine-id && systemd-machine-id-setup && cp -f /etc/machine-id /var/lib/dbus/machine-id && hostnamectl

# Kube Req
apt-get install -y socat conntrack-tools && echo "1" > /proc/sys/net/ipv4/ip_forward

echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf && sysctl -p

mkdir /lib/systemd/system/kubelet.service.d
nano /lib/systemd/system/kubelet.service.d/10-kubeadm.conf
# Note: This dropin only works with kubeadm and kubelet v1.11+
[Service]
Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
# This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
# This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
# the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
EnvironmentFile=-/etc/sysconfig/kubelet
ExecStart=
ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS

nano /var/lib/kubelet/kubeadm-flags.env
KUBELET_KUBEADM_ARGS="--container-runtime=remote --container-runtime-endpoint=/run/containerd/containerd.sock --pod-infra-container-image=k8s.gcr.io/pause:3.5"

systemctl daemon-reload && systemctl restart kubelet && systemctl status kubelet

kubeadm --v=5 join 192.168.249.20:6443 --token slxa40.tjnrkssaz8r1d1k0 --discovery-token-ca-cert-hash sha256:e752b4679a3a5d76ffc3ac1889da519253576aeb8aad7b788fb9f1f2e0271167


#dnf install -y epel-release && dnf install -y nano htop ncdu wget tar telnet iproute-tc nfs-utils

#dnf install -y chrony && systemctl enable --now chronyd

#nano .bashrc

echo "alias u='apt-get update'" >> .bashrc

hostnamectl set-hostname kubeworker9

# sed -i 's/172.20.240.181/10.221.35.86/' /etc/hosts

# systemctl enable --now cockpit.socket

systemctl disable --now firewalld kdump

setenforce 0 && sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sysctl --system

modprobe overlay && modprobe br_netfilter


#containerd
          
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

dnf install -y kubelet kubeadm kubectl && systemctl enable --now kubelet

#newmaster
kubeadm init --pod-network-cidr=10.244.0.0/16
#oldmaster
kubeadm token create --print-join-command

#Fedora swap disable
dnf remove -y zram-generator-defaults && reboot

echo "172.16.9.46 grafana.edo.iba gitlab.edo.iba registry2.edo.iba minio2.edo.iba minio.edo.iba edms.edo.iba gtb.edo.iba" >> /etc/hosts
echo "10.111.2.40 registry.nces.by"  >> /etc/hosts
